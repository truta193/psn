<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="3.7.2" version="1.0">
  This file is intended to be loaded by Logisim-evolution v3.7.2(https://github.com/logisim-evolution/).

  <lib desc="#Wiring" name="0">
    <tool name="Pin">
      <a name="appearance" val="classic"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Plexers" name="2"/>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4"/>
  <lib desc="#I/O" name="5"/>
  <lib desc="#TTL" name="6"/>
  <lib desc="#TCL" name="7"/>
  <lib desc="#Base" name="8"/>
  <lib desc="#BFH-Praktika" name="9"/>
  <lib desc="#Input/Output-Extra" name="10"/>
  <lib desc="#Soc" name="11"/>
  <main name="main"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
  </options>
  <mappings>
    <tool lib="8" map="Button2" name="Menu Tool"/>
    <tool lib="8" map="Button3" name="Menu Tool"/>
    <tool lib="8" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="8" name="Poke Tool"/>
    <tool lib="8" name="Edit Tool"/>
    <tool lib="8" name="Wiring Tool"/>
    <tool lib="8" name="Text Tool"/>
    <sep/>
    <tool lib="0" name="Pin"/>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </tool>
    <sep/>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
    <tool lib="1" name="XOR Gate"/>
    <tool lib="1" name="NAND Gate"/>
    <tool lib="1" name="NOR Gate"/>
    <sep/>
    <tool lib="4" name="D Flip-Flop"/>
    <tool lib="4" name="Register"/>
  </toolbar>
  <circuit name="main">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="main"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="downloadBoard" val="BASYS3_CB17"/>
    <a name="simulationFrequency" val="2.0"/>
    <boardmap boardname="BASYS3_CB17">
      <mc/>
      <mc key="/PSDATA" map="544,104"/>
      <mc key="/RESET" map="78,323"/>
      <mc key="/clk" map="321,237"/>
      <mc key="/psclk" map="527,86"/>
      <mc key="/x" map="92,295"/>
    </boardmap>
    <comp lib="0" loc="(300,130)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="clk"/>
    </comp>
    <comp lib="0" loc="(300,150)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="RESET"/>
    </comp>
    <comp lib="0" loc="(300,170)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="psclk"/>
    </comp>
    <comp lib="0" loc="(300,190)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="PSDATA"/>
    </comp>
    <comp lib="0" loc="(520,130)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="x"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(520,150)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="Output_bus_1"/>
      <a name="output" val="true"/>
      <a name="radix" val="16"/>
      <a name="width" val="16"/>
    </comp>
    <comp loc="(520,130)" name="ps2_mse">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="ps2_mse_1"/>
    </comp>
  </circuit>
  <vhdl name="ps2_mouse"/>
  <vhdl name="ps2_ms"/>
  <vhdl name="ps2_mse">LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
USE ieee.std_logic_unsigned.all;

ENTITY ps2_mse IS&#13;
  PORT (&#13;
	CLK, RST, PS2CLK, PS2DATA: in std_logic;
	LCLICK: out std_logic;
	TEST: out std_logic_vector(15 downto 0)
);&#13;
END ps2_mse;&#13;
&#13;

ARCHITECTURE comportm OF ps2_mse IS&#13;
&#13;signal MOUSE_BITS: natural := 0;
signal MOUSE_REG: std_logic_vector(42 downto 0) := (others =&gt; '0');
signal TRIGGER : std_logic;

BEGIN&#13;
	process(RST, PS2CLK)
	begin
		if RST = '1' then
			MOUSE_BITS &lt;= 0;
		elsif rising_edge(PS2CLK) then
			if MOUSE_BITS &lt;= 42 then
				MOUSE_BITS &lt;= MOUSE_BITS + 1;
			else
				MOUSE_BITS &lt;= 0;
			end if;	
		end if;
	end process;
	
	process(PS2CLK, RST)
	begin
		if RST = '1' then
			MOUSE_REG &lt;= (others =&gt; '0');
		elsif falling_edge(PS2CLK) then
			TRIGGER &lt;= '0';
			MOUSE_REG &lt;= MOUSE_REG(41 downto 0) &amp; PS2DATA;
			if MOUSE_BITS = 42 then
			    TRIGGER &lt;= '1';
			end if;
		end if;
	end process;&#13;

	process(RST, CLK)
	variable IDLE: boolean := true;
	begin
		if RST = '1' then
			IDLE := true;
		elsif rising_edge(CLK) then
			LCLICK &lt;= '0';
			if TRIGGER = '1' then
				if MOUSE_REG(41) = '1' then
					LCLICK &lt;= '1';
				end if;
				--TEST &lt;= MOUSE_REG(42 downto 27);
			end if;


		end if;
	end process;
&#13;
END comportm;&#13;
</vhdl>
</project>
