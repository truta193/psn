<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="3.8.0" version="1.0">
  This file is intended to be loaded by Logisim-evolution v3.8.0(https://github.com/logisim-evolution/).

  <lib desc="#Wiring" name="0">
    <tool name="Pin">
      <a name="appearance" val="classic"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Plexers" name="2"/>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4"/>
  <lib desc="#I/O" name="5"/>
  <lib desc="#TTL" name="6"/>
  <lib desc="#TCL" name="7"/>
  <lib desc="#Base" name="8"/>
  <lib desc="#BFH-Praktika" name="9"/>
  <lib desc="#Input/Output-Extra" name="10"/>
  <lib desc="#Soc" name="11"/>
  <main name="main"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
  </options>
  <mappings>
    <tool lib="8" map="Button2" name="Poke Tool"/>
    <tool lib="8" map="Button3" name="Menu Tool"/>
    <tool lib="8" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="8" name="Poke Tool"/>
    <tool lib="8" name="Edit Tool"/>
    <tool lib="8" name="Wiring Tool"/>
    <tool lib="8" name="Text Tool"/>
    <sep/>
    <tool lib="0" name="Pin"/>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </tool>
    <sep/>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
    <tool lib="1" name="XOR Gate"/>
    <tool lib="1" name="NAND Gate"/>
    <tool lib="1" name="NOR Gate"/>
    <sep/>
    <tool lib="4" name="D Flip-Flop"/>
    <tool lib="4" name="Register"/>
  </toolbar>
  <circuit name="main">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="main"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="downloadBoard" val="BASYS3_CB17"/>
    <a name="simulationFrequency" val="0.5"/>
    <boardmap boardname="BASYS3_CB17">
      <mc/>
      <mc key="/DATA" map="0,0"/>
      <mc key="/Output_2" map="92,295"/>
      <mc key="/Output_bus_1" pmap="353_295_0,315_295_0,278_295_0,241_295_0,203_295_0,168_295_0,131_295_0,u,u,u,u,u,u,u,u,u,u,u,u,u,u,u,u,u,u,649_295_0,612_295_0,577_295_0,538_295_0,499_295_0,465_295_0,425_295_0,389_295_0"/>
      <mc key="/PSCLK" map="0,10"/>
      <mc key="/RST" map="78,323"/>
      <mc key="/SYSCLK" map="321,237"/>
    </boardmap>
    <comp lib="0" loc="(100,130)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="SYSCLK"/>
    </comp>
    <comp lib="0" loc="(170,160)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="DATA"/>
    </comp>
    <comp lib="0" loc="(240,190)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="RST"/>
    </comp>
    <comp lib="0" loc="(490,130)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="Output_1"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(490,150)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="Output_2"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(630,180)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="Output_bus_1"/>
      <a name="output" val="true"/>
      <a name="radix" val="16"/>
      <a name="width" val="33"/>
    </comp>
    <comp lib="0" loc="(80,70)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="PSCLK"/>
    </comp>
    <comp loc="(490,130)" name="PS2_READER">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="ps2_reader_1"/>
    </comp>
    <wire from="(100,130)" to="(210,130)"/>
    <wire from="(170,160)" to="(240,160)"/>
    <wire from="(210,130)" to="(210,140)"/>
    <wire from="(210,140)" to="(260,140)"/>
    <wire from="(230,100)" to="(230,130)"/>
    <wire from="(230,130)" to="(270,130)"/>
    <wire from="(240,160)" to="(240,170)"/>
    <wire from="(240,170)" to="(270,170)"/>
    <wire from="(240,190)" to="(270,190)"/>
    <wire from="(260,140)" to="(260,150)"/>
    <wire from="(260,150)" to="(270,150)"/>
    <wire from="(490,170)" to="(620,170)"/>
    <wire from="(620,170)" to="(620,180)"/>
    <wire from="(620,180)" to="(630,180)"/>
    <wire from="(80,70)" to="(90,70)"/>
    <wire from="(90,100)" to="(230,100)"/>
    <wire from="(90,70)" to="(90,100)"/>
  </circuit>
  <vhdl name="PS2_READER">LIBRARY ieee;&#13;
USE ieee.std_logic_1164.all;&#13;
use ieee.std_logic_unsigned.all;
&#13;

ENTITY PS2_READER IS
  PORT (
	CLK, SYSCLK, DATA, RESET : in std_logic;
	CLICK, N_CLICK : out std_logic;
	TEST : out std_logic_vector(32 downto 0)
    );
END PS2_READER;

ARCHITECTURE comportm OF PS2_READER IS
	
	COMPONENT SHIFT_REG IS
		PORT(
			CLK, RESET, D : in std_logic;
			Q : out std_logic_vector(32 downto 0)
		);
	END COMPONENT;
	signal TEMPWIRE : std_logic_vector(32 downto 0) := (others =&gt; '0');
BEGIN
	SHR : SHIFT_REG port map(CLK, RESET, DATA, TEMPWIRE);
	TEST &lt;= TEMPWIRE;
	process(CLK)
	variable count: std_logic_vector(5 downto 0) := "000000";

	begin
	
	if (falling_edge(CLK)) then
		CLICK &lt;= '0';
		N_CLICK &lt;= '1';
		if (count = "100000") then
			count := "000000";
			if (TEMPWIRE(31) = '0') then
				CLICK &lt;= '1';
				N_CLICK &lt;= '0';
			else 
				CLICK &lt;= '0';
				N_CLICK &lt;= '1';		
			end if;
		else 
			count := count + 1;
		end if;
	end if;

	end process;

END comportm;






LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_unsigned.all;

ENTITY BIST_D IS
  PORT (
	CLK: in std_logic;
	D, S, R: in std_logic;
	Q: out std_logic
    );
END BIST_D;


ARCHITECTURE compr OF BIST_D IS

BEGIN
	process(CLK)
	begin
		if rising_edge(CLK) then
			if (S = '0') then
				Q &lt;= '1';
			elsif (R = '0') then
				Q &lt;= '0';
			else 
				Q &lt;= D;
			end if;
		end if;
	end process;

END compr;





LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_unsigned.all;

ENTITY SHIFT_REG IS
	PORT(
		CLK, RESET, D : in std_logic;
		Q : out std_logic_vector(32 downto 0)
	);
END SHIFT_REG;

ARCHITECTURE struct of SHIFT_REG is
	COMPONENT BIST_D IS
	  PORT (
		CLK: in std_logic;
		D, S, R: in std_logic;
		Q: out std_logic
	    );
	END COMPONENT;

	signal W32, W31, W30, W29, W28, W27, W26, W25, W24, W23, W22, W21, W20, W19, W18, W17, W16, W15, W14, W13, W12, W11, W10, W09, W08, W07, W06, W05, W04, W03, W02, W01, W00 : std_logic;
BEGIN
	D33: BIST_D port map(CLK, D, '1',RESET, W32);
	Q(32) &lt;= W32;
	D32: BIST_D port map(CLK, W32, '1',RESET,W31 );
	Q(31) &lt;= W31;
	D31: BIST_D port map(CLK, W31, '1',RESET,W30 );
	Q(30) &lt;= W30;
	D30: BIST_D port map(CLK, W30, '1',RESET,W29 );
	Q(29) &lt;= W29;
	D29: BIST_D port map(CLK, W29, '1',RESET,W28 );
	Q(28) &lt;= W28;
	D28: BIST_D port map(CLK, W28, '1',RESET,W27 );
	Q(27) &lt;= W27;
	D27: BIST_D port map(CLK, W27, '1',RESET,W26 );
	Q(26) &lt;= W26;
	D26: BIST_D port map(CLK, W26, '1',RESET,W25 );
	Q(25) &lt;= W25;
	D25: BIST_D port map(CLK, W25, '1',RESET,W24 );
	Q(24) &lt;= W24;
	D24: BIST_D port map(CLK, W24, '1',RESET,W23 );
	Q(23) &lt;= W23;
	D23: BIST_D port map(CLK, W23, '1',RESET,W22 );
	Q(22) &lt;= W22;
	D22: BIST_D port map(CLK, W22, '1',RESET,W21 );
	Q(21) &lt;= W21;
	D21: BIST_D port map(CLK, W21, '1',RESET,W20 );
	Q(20) &lt;= W20;
	D20: BIST_D port map(CLK, W20, '1',RESET,W19 );
	Q(19) &lt;= W19;
	D19: BIST_D port map(CLK, W19, '1',RESET,W18 );
	Q(18) &lt;= W18;
	D18: BIST_D port map(CLK, W18, '1',RESET,W17 );
	Q(17) &lt;= W17;
	D17: BIST_D port map(CLK, W17, '1',RESET,W16 );
	Q(16) &lt;= W16;
	D16: BIST_D port map(CLK, W16, '1',RESET,W15 );
	Q(15) &lt;= W15;
	D15: BIST_D port map(CLK, W15, '1',RESET,W14 );
	Q(14) &lt;= W14;
	D14: BIST_D port map(CLK, W14, '1',RESET,W13 );
	Q(13) &lt;= W13;
	D13: BIST_D port map(CLK, W13, '1',RESET,W12 );
	Q(12) &lt;= W12;
	D12: BIST_D port map(CLK, W12, '1',RESET,W11 );
	Q(11) &lt;= W11;
	D11: BIST_D port map(CLK, W11, '1',RESET,W10 );
	Q(10) &lt;= W10;
	D10: BIST_D port map(CLK, W10, '1',RESET,W09 );
	Q(9) &lt;= W09;
	D09: BIST_D port map(CLK, W09, '1',RESET,W08 );
	Q(8) &lt;= W08;
	D08: BIST_D port map(CLK, W08, '1',RESET,W07 );
	Q(7) &lt;= W07;
	D07: BIST_D port map(CLK, W07, '1',RESET,W06 );
	Q(6) &lt;= W06;
	D06: BIST_D port map(CLK, W06, '1',RESET,W05 );
	Q(5) &lt;= W05;
	D05: BIST_D port map(CLK, W05, '1',RESET,W04 );
	Q(4) &lt;= W04;
	D04: BIST_D port map(CLK, W04, '1',RESET,W03 );
	Q(3) &lt;= W03;
	D03: BIST_D port map(CLK, W03, '1',RESET,W02 );
	Q(2) &lt;= W02;
	D02: BIST_D port map(CLK, W02, '1',RESET,W01 );
	Q(1) &lt;= W01;
	D01: BIST_D port map(CLK, W01, '1',RESET,W00);
	Q(0) &lt;= W00;

END struct;
</vhdl>
</project>
