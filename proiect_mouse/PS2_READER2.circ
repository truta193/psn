<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="3.7.2" version="1.0">
  This file is intended to be loaded by Logisim-evolution v3.7.2(https://github.com/logisim-evolution/).

  <lib desc="#Wiring" name="0">
    <tool name="Pin">
      <a name="appearance" val="classic"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Plexers" name="2"/>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4"/>
  <lib desc="#I/O" name="5"/>
  <lib desc="#TTL" name="6"/>
  <lib desc="#TCL" name="7"/>
  <lib desc="#Base" name="8"/>
  <lib desc="#BFH-Praktika" name="9"/>
  <lib desc="#Input/Output-Extra" name="10"/>
  <lib desc="#Soc" name="11"/>
  <main name="main"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
  </options>
  <mappings>
    <tool lib="8" map="Button2" name="Menu Tool"/>
    <tool lib="8" map="Button3" name="Menu Tool"/>
    <tool lib="8" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="8" name="Poke Tool"/>
    <tool lib="8" name="Edit Tool"/>
    <tool lib="8" name="Wiring Tool"/>
    <tool lib="8" name="Text Tool"/>
    <sep/>
    <tool lib="0" name="Pin"/>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </tool>
    <sep/>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
    <tool lib="1" name="XOR Gate"/>
    <tool lib="1" name="NAND Gate"/>
    <tool lib="1" name="NOR Gate"/>
    <sep/>
    <tool lib="4" name="D Flip-Flop"/>
    <tool lib="4" name="Register"/>
  </toolbar>
  <circuit name="main">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="main"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="downloadBoard" val="BASYS3_CB17"/>
    <a name="simulationFrequency" val="2.0"/>
    <boardmap boardname="BASYS3_CB17">
      <mc key="/Input_1" map="321,237"/>
      <mc key="/Input_2" map="78,323"/>
      <mc key="/Input_3" map="527,86"/>
      <mc key="/Input_4" map="544,104"/>
      <mc key="/Output_1" map="92,295"/>
      <mc key="/Output_2" map="131,295"/>
      <mc key="/Output_bus_1" pmap="649_295_0,612_295_0,577_295_0,538_295_0,499_295_0,465_295_0,425_295_0,389_295_0,353_295_0,315_295_0,278_295_0,241_295_0,203_295_0,168_295_0,154_248_0,136_245_0"/>
    </boardmap>
    <comp lib="0" loc="(240,160)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Input_1"/>
    </comp>
    <comp lib="0" loc="(240,180)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Input_2"/>
    </comp>
    <comp lib="0" loc="(240,200)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Input_3"/>
    </comp>
    <comp lib="0" loc="(240,220)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="Input_4"/>
    </comp>
    <comp lib="0" loc="(460,160)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="Output_1"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(460,180)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="Output_2"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(460,200)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="Output_bus_1"/>
      <a name="output" val="true"/>
      <a name="radix" val="16"/>
      <a name="width" val="16"/>
    </comp>
    <comp loc="(460,160)" name="ps2_decoder">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="ps2_decoder_1"/>
    </comp>
  </circuit>
  <vhdl name="ps2_decoder">-- debouncer useless
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_unsigned.all;

ENTITY ps2_decoder IS
  PORT (
  	CLOCK: in std_logic;
  	RESET: in std_logic;
  	PS2_CLOCK : in std_logic;
  	PS2_DATA: in std_logic;
  	LEFT_CLICK: inout std_logic;
  	RIGHT_CLICK: inout std_logic;
  	TEST: out std_logic_vector(15 downto 0)
	);
END ps2_decoder;


ARCHITECTURE Behavioral OF ps2_decoder IS

signal MOUSE_REGISTER: std_logic_vector(42 downto 0) := (others =&gt; '0');
signal CLICK_COUNT: std_logic_vector(15 downto 0) := (others =&gt; '0');
signal MOUSE_BITS: std_logic_vector(5 downto 0) := (others =&gt; '0');
signal REGISTER_FULL: std_logic;
signal IS_LEFT_PRESSED: std_logic := '0';
signal IS_RIGHT_PRESSED: std_logic := '0';


BEGIN
    BIT_COUNT_PROCESS: PROCESS(PS2_CLOCK, RESET)
    BEGIN
        IF RESET = '0' then
            MOUSE_BITS &lt;= (others =&gt; '0');
        elsif rising_edge(PS2_CLOCK) then
            if MOUSE_BITS &lt;= 42 then
                MOUSE_BITS &lt;= MOUSE_BITS + 1;
            else
                MOUSE_BITS &lt;= (others =&gt; '0');
            end if;
        end if;
    END PROCESS;

    REGISTER_PROCESS: PROCESS(PS2_CLOCK, RESET)
    BEGIN
    	   REGISTER_FULL &lt;= '0';
        if RESET = '0' then
            MOUSE_REGISTER &lt;= (others =&gt; '0');
        elsif falling_edge(PS2_CLOCK) then
            MOUSE_REGISTER &lt;= MOUSE_REGISTER(41 downto 0) &amp; PS2_DATA;
            if MOUSE_BITS = 42 then
            	REGISTER_FULL &lt;= '1';
            end if;

        end if;
    END PROCESS;	
    	
    COUNTER_PROCESS: PROCESS(CLOCK, RESET)
    BEGIN
        if RESET = '0' then
            CLICK_COUNT &lt;= (others =&gt; '0');
        elsif rising_edge(CLOCK) then
        	  if REGISTER_FULL = '1' then
			if MOUSE_REGISTER(41) = '1' and IS_LEFT_PRESSED = '0' then
				CLICK_COUNT &lt;= CLICK_COUNT + 1;
			elsif MOUSE_REGISTER(40) = '1' and IS_RIGHT_PRESSED = '0' then
				CLICK_COUNT &lt;= CLICK_COUNT - 1;
			end if;
			IS_LEFT_PRESSED &lt;= MOUSE_REGISTER(41);
        		IS_RIGHT_PRESSED &lt;= MOUSE_REGISTER(40);
        	  end if;
        end if;
        
        TEST &lt;= CLICK_COUNT;
    END PROCESS;

    
    

END Behavioral;
</vhdl>
</project>
